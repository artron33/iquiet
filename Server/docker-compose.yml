version: '3.8'
services:
  mongo:
    image: mongo:6
    ports:
      - '27018:27017'
    volumes:
      - mongo_data:/data/db
    networks:
      - iquit_net

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: iquit
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - iquit_net

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '15673:15672'
      - '5673:5672'
    networks:
      - iquit_net

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '5002:5002'
    environment:
      DATABASE_URI: postgresql://postgres:postgres@db:5432/iquit
      MONGO_URI: mongodb://mongo:27017/iquit_events
      JWT_SECRET_KEY: super-secret-key
      DEBUG_FAKE_DATA: 'false'
      FLASK_ENV: production
      CELERY_BROKER_URL: amqp://guest:guest@rabbitmq:5672/
      CELERY_RESULT_BACKEND: rpc://
    depends_on:
      - db
      - rabbitmq
    networks:
      - iquit_net

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A app.tasks.background_tasks.celery worker --loglevel=info
    environment:
      DATABASE_URI: postgresql://postgres:postgres@db:5432/iquit
      MONGO_URI: mongodb://mongo:27017/iquit_events
      JWT_SECRET_KEY: super-secret-key
      DEBUG_FAKE_DATA: 'false'
      CELERY_BROKER_URL: amqp://guest:guest@rabbitmq:5672/
      CELERY_RESULT_BACKEND: rpc://
    depends_on:
      - backend
      - rabbitmq
    networks:
      - iquit_net

volumes:
  db_data:
  mongo_data:

networks:
  iquit_net:
    driver: bridge
